<?php
 if ( ! defined( 'ABSPATH' ) ) { exit; } global $wpdb, $current_user, $post; $data['ajax_pagination'] = false; $data['texts'] = array( 'new_message' => __( 'New Message', WPC_CLIENT_TEXT_DOMAIN ), 'new' => __( 'New', WPC_CLIENT_TEXT_DOMAIN ), 'all' => __( 'Select All', WPC_CLIENT_TEXT_DOMAIN ), 'inbox' => __( 'Inbox', WPC_CLIENT_TEXT_DOMAIN ), 'sent' => __( 'Sent', WPC_CLIENT_TEXT_DOMAIN ), 'trash' => __( 'Trash', WPC_CLIENT_TEXT_DOMAIN ), 'archive' => __( 'Archive', WPC_CLIENT_TEXT_DOMAIN ), 'select_all' => __( 'Select All at this page', WPC_CLIENT_TEXT_DOMAIN ), 'none' => __( 'Unselect All', WPC_CLIENT_TEXT_DOMAIN ), 'read' => __( 'Select Read', WPC_CLIENT_TEXT_DOMAIN ), 'unread' => __( 'Select Unread', WPC_CLIENT_TEXT_DOMAIN ), 'mark_as_read' => __( 'Mark As Read', WPC_CLIENT_TEXT_DOMAIN ), 'delete' => __( 'Move To Trash', WPC_CLIENT_TEXT_DOMAIN ), 'to_archive' => __( 'Move To Archive', WPC_CLIENT_TEXT_DOMAIN ), 'leave' => __( 'Leave Chain', WPC_CLIENT_TEXT_DOMAIN ), 'restore' => __( 'Restore', WPC_CLIENT_TEXT_DOMAIN ), 'filters' => __( 'Filters', WPC_CLIENT_TEXT_DOMAIN ), 'filter_by' => __( 'Filter By', WPC_CLIENT_TEXT_DOMAIN ), 'member' => __( 'Member', WPC_CLIENT_TEXT_DOMAIN ), 'date' => __( 'Date', WPC_CLIENT_TEXT_DOMAIN ), 'apply_filter' => __( 'Apply Filter', WPC_CLIENT_TEXT_DOMAIN ), 'search' => __( 'Search', WPC_CLIENT_TEXT_DOMAIN ), 'search_in_messages' => __( 'Search in messages', WPC_CLIENT_TEXT_DOMAIN ), 'refresh' => __( 'Refresh', WPC_CLIENT_TEXT_DOMAIN ), 'newer' => __( 'Newer', WPC_CLIENT_TEXT_DOMAIN ), 'older' => __( 'Older', WPC_CLIENT_TEXT_DOMAIN ), 'to' => __( 'To', WPC_CLIENT_TEXT_DOMAIN ), 'select_members' => __( 'Select Members', WPC_CLIENT_TEXT_DOMAIN ), 'client' => $this->custom_titles['client']['s'], 'clients' => $this->custom_titles['client']['p'], 'circle' => $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['s'], 'circles' => $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'], 'staff' => $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['staff']['s'], 'staffs' => $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['staff']['p'], 'manager' => $this->custom_titles['manager']['s'], 'managers' => $this->custom_titles['manager']['p'], 'admin' => __( 'Admin', WPC_CLIENT_TEXT_DOMAIN ), 'admins' => __( 'Admins', WPC_CLIENT_TEXT_DOMAIN ), 'cc_members' => __( 'CC Members', WPC_CLIENT_TEXT_DOMAIN ), 'select_cc_members' => __( 'Select CC Members', WPC_CLIENT_TEXT_DOMAIN ), 'subject' => __( 'Subject', WPC_CLIENT_TEXT_DOMAIN ), 'message_subject' => __( 'Message Subject', WPC_CLIENT_TEXT_DOMAIN ), 'message' => __( 'Message', WPC_CLIENT_TEXT_DOMAIN ), 'send' => __( 'Send Message', WPC_CLIENT_TEXT_DOMAIN ), 'cancel' => __( 'Cancel', WPC_CLIENT_TEXT_DOMAIN ), 'no_messages' => __( 'No Messages', WPC_CLIENT_TEXT_DOMAIN ), 'messages_in_chain' => __( 'Messages in chain', WPC_CLIENT_TEXT_DOMAIN ), 'cc_email' => __( 'CC Email', WPC_CLIENT_TEXT_DOMAIN ), 'cc_email_description' => __( 'Add an email address here to copy them once on the initial message', WPC_CLIENT_TEXT_DOMAIN ), 'cc_members_description'=> __( 'You can add more members to a Dialog to create a Group Dialog', WPC_CLIENT_TEXT_DOMAIN ), 'to_description' => __( 'Select one member will create a Dialog, selecting multiple members will create separate message threads', WPC_CLIENT_TEXT_DOMAIN ), ); $data['to_users'] = $this->cc_private_messages_build_to_list(); $data['new_message_textarea'] = '<textarea class="new_message_content wpc_textarea" name="new_message[content]" style="width:100%; height:100px;resize: vertical;" placeholder="' . __( 'Type your private message here', WPC_CLIENT_TEXT_DOMAIN ) . '"></textarea>'; $data['show_cc_email'] = false; $wpc_private_messages = $this->cc_get_settings( 'private_messages' ); if( isset( $wpc_private_messages['add_cc_email'] ) && 'yes' == $wpc_private_messages['add_cc_email'] ) { $data['show_cc_email'] = true; } $data['show_filters'] = true; if( isset( $atts['show_filters'] ) && 'no' == $atts['show_filters'] ) { $data['show_filters'] = false; } $data['display_name'] = ( isset( $wpc_private_messages['display_name'] ) && !empty( $wpc_private_messages['display_name'] ) ) ? $wpc_private_messages['display_name'] : 'user_login'; $out2 = $this->cc_getTemplateContent( 'wpc_client_com', $data, $user_id ); $content = $this->cc_replace_placeholders( do_shortcode( $out2 ), array( 'client_id' => $user_id ) ); return $content;