<?php
 if ( ! defined( 'ABSPATH' ) ) { exit; } global $wpdb; if ( !is_user_logged_in() ) { do_action( 'wp_client_redirect', $this->cc_get_login_url() ); exit; } if ( !current_user_can( 'wpc_client' ) ) return '<div class="staff_directory">' . __( 'Sorry, you do not have permission to see this page!', WPC_CLIENT_TEXT_DOMAIN ) . '</div>'; if ( isset( $_GET['wpc_client_action'] ) && 'delete_staff' == $_GET['wpc_client_action'] ) { require_once( ABSPATH . 'wp-admin/includes/user.php' ); if( is_multisite() ) { wpmu_delete_user( $_GET['id'] ); } else { wp_delete_user( $_GET['id'] ); } if( $this->permalinks ) { $hub_url = add_query_arg( array( 'msg' => 'd' ), $this->cc_get_slug( 'staff_directory_page_id', false ) ); } else { $hub_url = add_query_arg( array( 'msg' => 'd' ), $this->cc_get_slug( 'staff_directory_page_id', false ) ); } do_action( 'wp_client_redirect', $hub_url ); exit; } $wpc_clients_staff = $this->cc_get_settings( 'clients_staff' ); $data = array(); $data['texts'] = array( 'add_staff' => sprintf( __( 'Add %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['staff']['s'] ), 'first_name' => __( 'First Name', WPC_CLIENT_TEXT_DOMAIN ), 'email' => __( 'Email', WPC_CLIENT_TEXT_DOMAIN ), 'status' => __( 'Status', WPC_CLIENT_TEXT_DOMAIN ), 'staff_login' => sprintf( __( '%s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['staff']['s'] ), 'edit' => __( 'Edit', WPC_CLIENT_TEXT_DOMAIN ), 'delete' => __( 'Delete', WPC_CLIENT_TEXT_DOMAIN ), 'approved' => __( 'Approved', WPC_CLIENT_TEXT_DOMAIN ), 'wait_approve' => __( 'Waiting for approval', WPC_CLIENT_TEXT_DOMAIN ), 'delete_confirm' => sprintf( __( 'Are you sure to delete this %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['staff']['s'] ), ); $data['message'] = ''; if( isset( $_GET['msg'] ) ) { $msg = $_GET['msg']; switch( $msg ) { case 'a': $data['message'] = sprintf( __( '%s <strong>Added</strong> Successfully.', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['staff']['s'] ); break; case 'e': $data['message'] = sprintf( __( '%s <strong>Changed</strong> Successfully.', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['staff']['s'] ); break; case 'd': $data['message'] = sprintf( __( '%s <strong>Deleted</strong> Successfully.', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['staff']['s'] ); break; } } $data['add_staff_link'] = ''; if ( isset( $wpc_clients_staff['staff_registration'] ) && 'yes' == $wpc_clients_staff['staff_registration'] ) { $data['add_staff_link'] = $this->cc_get_slug( 'add_staff_page_id' ); } $delete_link = add_query_arg( array( 'wpc_client_action' => 'delete_staff' ), $this->cc_get_slug( 'staff_directory_page_id', false ) ); $edit_staff_link = $this->cc_get_slug( 'edit_staff_page_id', false ); $args = array( 'role' => 'wpc_client_staff', 'meta_key' => 'parent_client_id', 'meta_value' => get_current_user_id(), 'orderby' => 'user_login', 'order' => 'ASC', ); $staffs = get_users( $args ); $data['staffs'] = array(); foreach( $staffs as $staff ) { $staff = get_userdata( $staff->ID ); $data['staffs'][] = array( 'user_login' => $staff->user_login, 'first_name' => $staff->first_name, 'last_name' => isset( $staff->last_name ) ? $staff->last_name : '', 'user_email' => $staff->user_email, 'to_approve' => get_user_meta( $staff->ID, 'to_approve', true ), 'edit_link' => ( $this->permalinks ) ? $edit_staff_link . '/' . $staff->ID : add_query_arg( array( 'wpc_page' => 'edit_staff', 'wpc_page_value' => $staff->ID ), $edit_staff_link ), 'delete_link' => $delete_link . '&id=' . $staff->ID ); } $out2 = $this->cc_getTemplateContent( 'wpc_staff_directory', $data, $user_id ); return $this->cc_replace_placeholders( do_shortcode( $out2 ), array( 'client_id' => $user_id ) );