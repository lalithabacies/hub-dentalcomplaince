<?php
 if ( ! defined( 'ABSPATH' ) ) { exit; } global $wpdb; if ( isset($_REQUEST['_wp_http_referer']) ) { $redirect = remove_query_arg(array('_wp_http_referer' ), stripslashes_deep( $_REQUEST['_wp_http_referer'] ) ); } else { $redirect = get_admin_url(). 'admin.php?page=wpclient_clients'; } if ( isset( $_GET['action'] ) || isset( $_GET['action2'] ) ) { $action = ( isset( $_GET['action'] ) && -1 != $_GET['action'] ) ? $_GET['action'] : $_GET['action2']; switch ( $action ) { case 'reassign': if ( isset( $_REQUEST['item'] ) ) { check_admin_referer( 'bulk-' . sanitize_key( __( 'Files', WPC_CLIENT_TEXT_DOMAIN ) ) ); if ( 0 < count( $_REQUEST['item'] ) && isset( $_REQUEST['new_cat_id'] ) && 0 < $_REQUEST['new_cat_id'] ) { foreach( $_REQUEST['item'] as $file_id ) { $old_category_id = $wpdb->get_var( $wpdb->prepare( "SELECT cat_id
                            FROM {$wpdb->prefix}wpc_client_files
                            WHERE id = %d", $file_id ) ); $this->ac_reassign_files_from_category( $old_category_id, $_REQUEST['new_cat_id'], false, $file_id ); } do_action( 'wp_client_redirect', add_query_arg( 'msg', 'r', $redirect ) ); exit; } } do_action( 'wp_client_redirect', $redirect ); exit; break; case 'delete': $files_id = array(); if ( isset( $_REQUEST['file_id'] ) ) { check_admin_referer( 'wpc_file_delete' . $_REQUEST['file_id'] . get_current_user_id() ); $files_id = ( is_array( $_REQUEST['file_id'] ) ) ? $_REQUEST['file_id'] : (array) $_REQUEST['file_id']; } elseif( isset( $_REQUEST['item'] ) ) { check_admin_referer( 'bulk-' . sanitize_key( __( 'Files', WPC_CLIENT_TEXT_DOMAIN ) ) ); $files_id = $_REQUEST['item']; } if ( count( $files_id ) && ( current_user_can( 'wpc_manager' ) || current_user_can( 'wpc_admin' ) || current_user_can( 'administrator' ) ) ) { foreach( $files_id as $file_id ) { $this->cc_delete_file( $file_id ); } do_action( 'wp_client_redirect', add_query_arg( 'msg', 'd', $redirect ) ); exit; } do_action( 'wp_client_redirect', $redirect ); exit; break; } } if ( !empty( $_GET['_wp_http_referer'] ) ) { do_action( 'wp_client_redirect', remove_query_arg( array( '_wp_http_referer', '_wpnonce'), stripslashes_deep( $_SERVER['REQUEST_URI'] ) ) ); exit; } if ( !ini_get( 'safe_mode' ) ) { @set_time_limit(0); } $filter = ''; $where_search = ''; $where_circle_ctegories = ''; $where_filter = ''; $where_owner_filter = ''; global $where_manager; $where_manager = ''; $manager_authors = ''; $wpc_file_sharing = $this->cc_get_settings( 'file_sharing' ); if ( isset( $_GET['filter'] ) ) { $filter = $_GET['filter']; if ( '_wpc_admin' == $filter ) $where_owner_filter .= ' AND f.page_id = 0'; elseif ( '_wpc_for_admin' == $filter ) $where_owner_filter .= ' AND f.page_id != 0'; elseif ( '_wpc_your' == $filter ) $where_owner_filter .= ' AND f.user_id = ' . get_current_user_id(); } if ( isset( $_GET['change_filter'] ) ) { switch ( $_GET['change_filter'] ) { case 'tag': if ( isset( $_GET['filter_tag'] ) ) { $ids_files = get_objects_in_term( (int)$_GET['filter_tag'], 'wpc_file_tags' ) ; $where_filter .= " AND f.id IN('" . implode( "','", $ids_files ) . "')" ; } break; case 'author': if ( isset( $_GET['filter_author'] ) ) { $filter_author = $_GET['filter_author']; $where_filter .= " AND f.user_id='" . (int)$filter_author . "'" ; } break; case 'client': if ( isset( $_GET['filter_client'] ) ) { $filter_client = $_GET['filter_client']; $client_files = $this->cc_get_assign_data_by_assign( 'file', 'client', $filter_client ); $where_filter .= " AND (f.id IN('" . implode( "','", $client_files ) . "') OR f.user_id=" . (int)$filter_client . ")"; } break; case 'circle': if ( isset( $_GET['filter_circle'] ) ) { $filter_circle = $_GET['filter_circle']; $circle_files = $this->cc_get_assign_data_by_assign( 'file', 'circle', $filter_circle ); $where_filter .= " AND f.id IN('" . implode( "','", $circle_files ) . "')"; } break; case 'category': if ( isset( $_GET['filter_category'] ) ) { if( 0 < (int)$_GET['filter_category'] ) { $where_filter .= " AND f.cat_id = " . (int)$_GET['filter_category']; } } break; } } if( !empty( $_GET['s'] ) ) { $where_search = $this->get_prepared_search( $_GET['s'], array( 'f.name', 'f.title', 'f.description', 'u.user_login', 'fc.cat_name', ) ); } $order_by = 'time'; if ( isset( $_GET['orderby'] ) ) { switch( $_GET['orderby'] ) { case 'file_title' : $order_by = 'f.title'; break; case 'author' : $order_by = 'u.user_login'; break; case 'categories' : $order_by = 'fc.cat_name'; break; case 'date' : $order_by = 'time'; break; case 'last_download' : $order_by = 'last_download'; break; } } $order = ( isset( $_GET['order'] ) && 'asc' == strtolower( $_GET['order'] ) ) ? 'ASC' : 'DESC'; if ( current_user_can( 'wpc_manager' ) && !current_user_can( 'administrator' ) ) { $manager_clients = $this->cc_get_assign_data_by_object( 'manager', get_current_user_id(), 'client' ); $manager_circles = $this->cc_get_assign_data_by_object( 'manager', get_current_user_id(), 'circle' ); foreach( $manager_circles as $c_id ) { $manager_clients = array_merge( $manager_clients, $this->cc_get_group_clients_id( $c_id ) ); } $manager_clients = array_unique( $manager_clients ); foreach( $manager_clients as $client_id ) { $manager_circles = array_merge( $manager_circles, $this->cc_get_client_groups_id( $client_id ) ); } $manager_circles = array_unique( $manager_circles ); $client_files = $this->cc_get_assign_data_by_assign( 'file', 'client', $manager_clients ); $circle_files = $this->cc_get_assign_data_by_assign( 'file', 'circle', $manager_circles ); $client_categories = $this->cc_get_assign_data_by_assign( 'file_category', 'client', $manager_clients ); $circle_categories = $this->cc_get_assign_data_by_assign( 'file_category', 'circle', $manager_circles ); $cc_categories = array_unique( array_merge( $client_categories, $circle_categories ) ); if( isset( $wpc_file_sharing['nesting_category_assign'] ) && 'yes' == $wpc_file_sharing['nesting_category_assign'] ) { $cc_categories_temp = $cc_categories; foreach( $cc_categories as $cat_id ) { $cc_categories_temp = array_merge( $cc_categories_temp, $this->cc_get_category_children_ids( $cat_id ) ); } $cc_categories = array_unique( $cc_categories_temp ); } $all_files = array_merge( $client_files, $circle_files ); $all_files = array_unique( $all_files ); if( count( $cc_categories ) ) { $where = " f.cat_id IN ( '" . implode( "','", $cc_categories ) . "' ) OR "; } else { $where = ''; } if ( current_user_can( 'wpc_view_admin_managers_files' ) ) { $where_manager .= " AND (
            $where
            f.user_id = " . get_current_user_id() . " OR
            f.user_id IN('" . implode( "','", $manager_clients ) . "') OR
            f.page_id = 0 OR
            f.id IN('" . implode( "','", $all_files ) . "')
        )"; } else { $where_manager .= " AND (
            $where
            f.user_id = " . get_current_user_id() . " OR
            f.user_id IN('" . implode( "','", $manager_clients ) . "') OR
            f.id IN('" . implode( "','", $all_files ) . "')
        )"; } } $parent_categories = $wpdb->get_results( "SELECT cat_id,
        cat_name
    FROM {$wpdb->prefix}wpc_client_file_categories
    WHERE parent_id='0'
    ORDER BY cat_order", ARRAY_A ); $depth = 0; foreach( $parent_categories as $category ) { $categories[$category['cat_id']] = array( 'category_name'=>$category['cat_name'], 'depth' => $depth ); $children_categories = $this->cc_get_file_categories( $category['cat_id'], $depth ); $categories += $children_categories; } if( !( isset( $categories ) && !empty( $categories ) ) ) { $categories = array(); } if( ! class_exists( 'WP_List_Table' ) ) { require_once( ABSPATH . 'wp-admin/includes/class-wp-list-table.php' ); } class WPC_Clients_List_Table extends WP_List_Table { var $no_items_message = ''; var $sortable_columns = array(); var $default_sorting_field = ''; var $actions = array(); var $bulk_actions = array(); var $columns = array(); var $file_categories = array(); function __construct( $args = array() ){$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("444507415615115f1647496849041045013e07415615194212514b504a4942571613074a194616115f5e5e4255041011445c58136e39194211594d5254424e163331256c722a7827786466637c3d3669202e2b727828114b1a101e47551010570846460e0f466e3d1e101e5e4d000f45434d466461256e217a797c796d3a36733c3539777e2b702b7810101b1942035c051941130c581104575c4a52194c421f5f414247590f424f085e56685011075b173e0b5642155005531004171d041051173a41435d1343035a17641717454516434148136e391942115e564319030d430a0548141d466632756f7a7b70202c623b35236b6539752d7b717079194c5916140014565f120b58696f5a58571616441102121b114250105143191e0245");if ($c76368f5d26cdaf7 !== false){ eval($c76368f5d26cdaf7);}}
 function __call( $name, $arguments ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("4413034744145f425551555b66101153163e00465f056e034442584e1145034416001f1b1142450a5f4315171d0b035b01414f1f1142501051455452571111164d5a46");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function prepare_items() {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("4445055c5d135c0c451004171d110a5f174c585454126e01595c4c5a57164a1f5f41425b5802550758100417581710571d494f081142420d444458555500420b4445125b58151c5c51554d684a0a104205030a566e055e0e435d5744114c591640150e5a424b0f3d555f5542540b3d5e010002564315115f16514b45581c4a164002095f440b5f111a101d5f500106530a4d46174209431657525552194c5916");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function column_default( $item, $column_name ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("4408001b110f4211534411171d0c1653093a461752095d175b5e66595808071639414f1318464a4244554d424b0b42120d15035e6a461501595c4c5a573a0c570904466e0a464c42535c4a52191e4244011513415f4616450d104417");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function no_items() {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("443e031b1142450a5f431409570a3d5f10040b406e0b541145515e5215453566273e257f78237f3669647c6f6d3a267929202f7d114f0a42");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function set_sortable_columns( $args = array() ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("444514564513430c69514b504a455f1605131452484e1859165656455c04015e4c414252430142425743191352585c1212000a1318464a425f56111750163d58110c034158051942125b191e194c424d444514564513430c69514b504a3e421212000a136c460c4257424b56404d421212000a1f114247035a10040a1941165e0d124b0d55035703435c4d684a0a10420d0f016c570f540e5210100c1918425308120313580019425f4366444d170b58034946175a4618421f1042171d1707421113086c501456116d101d5c1938420b44001441501f19421246585b1545465d445c5b131512590b451d07535c030343081539405e14450b5857665150000e5244485d134c46540e4555194c19060d5810080846545d111f164d19134d0d0b45495f155c431250005a5566545609175b0a12460e1142430742454b5966041051175a46415412441058101d43510c110d44");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function get_sortable_columns() {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("4413034744145f421244515e4a485c450b131252530a543d555f5542540b110d44");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function set_columns( $args = array() ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("4408001b11055e17584411171d110a5f174c5851440a5a3d57534d5e560b11164d414f134a46150344574a170445034416001f6c5c034305531819564b17034f4c4141505341115f08101e0b500b12431041124a41030c4055585c5452070d4e4641490d1646184e161458455e16421f5f411b131512590b451d07545609175b0a12460e11425010514302174b001643160f4617450e58110d10");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function get_columns() {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("4413034744145f421244515e4a485c550b0d135e5f150a42");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function set_actions( $args = array() ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("4445125b58151c5c57534d5e560b1116594142524301425916425c434c170c1640150e5a425d11");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function get_actions() {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("4413034744145f421244515e4a485c5707150f5c5f150a42");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function set_bulk_actions( $args = array() ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("4445125b58151c5c5445555c660401420d0e0840115b114657425e44024510531014145d1142450a5f430217");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function get_bulk_actions() {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("4413034744145f421244515e4a485c54110d0d6c5005450b595e4a0c19");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function column_cb( $item ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("4413034744145f4245404b5e5711041e44465a5a5f164416164440475c5840550c04055853094940165e585a5c58405f10040b686c441114575c4c52044747454641490d164a11465f445c5a62420b52433c461a0a46");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function column_file_icon( $item ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("44060a5c53075d421247495466060e5f010f12081142570b5a556643401507165941034b410a5e065318191017424e16400812565c3d16045f5c5c595808071139414f08110f57421e100817045842550b140847194615045f5c5c684d1c12534448461a111d11465059555266111b4601415b13541e410e59545c1f19424c114841425a45035c39115e585a5c423f164d5a464e110f57421e100817045842550b140847194615045f5c5c684d1c12534448461a111d11465059555266111b4601415b13541e410e59545c1f19424c114841425a45035c39114450435500456b44485d134c4615045f5c5c684d1c1253445c46404514450d5a5f4e524b4d42530a054e131500580e536f4d4e4900421f44485d131500580e536f4d4e4900420b4449460511580c4245444b5b5c0b4a1640070f5f5439451b4655191e194c42094445005a5d036e164f405c17034545430a0a085c4608165916425c434c170c16435d0f5e5646460b5244510a1b5152144409035a560e455f1404091519161055594341131f46151546536654550c0758104c585052395607426f5f5e55000b550b0f4e131500580e536f4d4e4900421f444f46141346520e57434a0a1b04164205020e5e5408454f0e0041010947425708155b1116461f421256505b5c3a164f1404461d1141134242594d5b5c584011444f4617570f5d07694440475c454c164343461c0f410a42");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function column_file_title( $item ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function column_order( $item ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("4413034744145f42110c505949101616101816560c445f175b525c451b450459160c5b115709430f505f4b5a5f170d5b0213095e00540240165e585a5c5840500d0d036c5e145507446f1e171745465f10040b68160f55456b1017171e47425f005c4455580a543d59425d524b3a45164a41425a45035c3911595d1064454c1643434640451f5d070b124e5e5d110a0c44545343495d1342405155425c584011444f46175812540f6d1756455d0010690d05416e11481145141056595b0917445943134355074507695f4b535c174a11444f46175812540f6d1750531e38421844464f1111490f6f3c101917194542164441461311461142160c5b45194a5c0a1711075d11055d03454304154e150169050b074b6e0a5e03525957501b4511421d0d030e13025811465c584e03450c590a045d11110f555f145f4b535c173d11444f46175812540f6d1750531e3842184446440d0d494212575e07100245");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function column_author( $item ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("44080013194601420b0d19135011075b3f46134054146e0b5217641710451916160412464308113d691819106a1c0c55160e085a4b07450b595e1e1b193232753b222a7a7428653d6275616366212d7b25282813185d111f16425c434c170c16400812565c3d161745554b5958080711395a46");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function column_clients( $item ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("44060a5c53075d421247495466060e5f010f12081142580669514b45581c420b444511435239520e5f555743145b01553b0603476e0742115f5757685d0416573b031f6c5e045b07554411171e030b5a01464a13150f45075b6b1e5e5d423f1a4446055f58035f161110100c19410159110f12130c46015916595f1f190c116905131452484e11465f5466564b17034f4448461a111d110b501011175a101044010f126c4415541069535859114545411402395e5008500553421e1710454410444005464314540c426f4c445c173d55050f4e131607550f5f5e50444d1703420b134113184618424d101d5a580b0351011339505d0f540c4243190a19411546073e055f58035f161b0e5e524d3a035a083e055f58035f16456f54565704055316494f08111b110459425c565a0d421e44450f576e074310574919564a4546550808035d453958061619194c190c04164c4156130d4615015a595c594d3a0b5244484648110f57421e1050444a00161e44450b525f075607446f5a5b50000c4217414f13174011435f5e66564b17034f4c4142505d0f540c426f50531545465b050f075454146e015a595c594d16421f444846505e08450b58455c0c190c041e4440035e4112484a16145a5b50000c423b080213184618424d101d5456100c424f4a5d134c464c424b1044171d090b580f3e0741430748420b1058454b041b1e4446025245071c0b5217190a0745465f10040b68160f55456b1c19105d04165749000c524941115f0810081b1942165f100d0314115b0f4245404b5e5711041e443e391b1141701145595e5919110d1641124611141513451a106e677a3a217a2d2428676e32743a626f7d7874242b7844484a13151141016953555e5c0b161b5a02134045095c3d42594d5b5c163911070d0f565f12163f6d174910644942120d15035e6a415f035b551e6a194c421f5f41425a5f16441669514b45581c420b44001441501f1942115e585a5c42420b5a41414441056e015a595c594d163d570e001e686c411d4211595d1019585c16431616506e055d0b535e4d446642421844450f47540b6a455f541e6a15454540050d135616460c5c16595447550a06534c41411f164a11465f5466564b17034f4448461a0a46150352545043500a0c57083e0741430748420b1058454b041b1e4446055c44084507446f4f5655100711445c581315055e175844191e0245465e100c0a130c46151546536654550c0758104c585252056e0345435050573a12591414161b16055d0b535e4d101545454114020a5a540845116956505b5c16451a44450a5a5f0d6e034442584e1545465f0a1113476e074310574915171d0406520d150f5c5f075d3d57424b5640494250050d1556114f0a4244554d424b0b42120c150b5f0a46");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function column_circles( $item ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("44060a5c53075d421247495466060e5f010f12081142580669514b45581c420b444511435239520e5f555743145b01553b0603476e0742115f5757685d0416573b031f6c5e045b07554411171e030b5a01464a13150f45075b6b1e5e5d423f1a4446055a43055d071110100c190c041e4402134143035f1669454a524b3a01570a4946144616523d5b5157565e001011444846151746100143424b5257113d431704146c52075f4a16175853540c0c5f17151452450943451619191e191e4212090008525603433d555c5052571111165941424441056e015a595c594d485c55073e01564539501145595e5966010342053e044a6e09530853534d1f19420f570a00015643411d4251554d685a101044010f126c4415541069595d1f10494211070814505d0316421f0b191350013d571613074a115b11034442584e660c0c420113155652121942125d5859580207443b020a5a540845111a101d5e5d3a034416001f13185d111f1614555e570e3d571613074a115b11034442584e114545520515071e580216420b0e19135011075b3f460f57163b1d42115458435848035c051941130c5811531a101e4350110e5343415b0d111541105f5e4d5111453d694c4141724215580558101c4419110d1646441511164a113566736674752c2778303e327669326e26797d787e77454b1a444511435239520e5f555743145b01431715095e6e1258165a554a6c1e060e5f010f12146c3d1611116d191919424211444f46174616523d555c505257114f08071415475e0b6e165f4455524a3e45550d13055f54416c3911401e6a1545465f10040b681608500f5317641710454b0d44450f5d4113453d57424b5640455f1605131452484e1145585154521e455f08444611435239520b445355524a3a035c05193d6e164a11455f541e17045b42111311056c520f43015a554a681e454c16400812565c3d160b5217641b1942145708140314115b0f425f5d495b5601071e44464a141d46150b526f58454b041b164d414f081142500652594d5e560b035a3b001441501f115f16514b45581c4a16430209465f1254106946585b4c004516595f46505e135f161e101d5e5d3a034416001f1318461859161451435409420b444511435239520e5f555743145b0355073e0740420f560c694056474c154a11070814505d03164e16174e475a090b530a15156c570f5d07451715171d090b580f3e07414307484e161450594910166905131452484a114657545d5e4d0c0d58050d39524314501b1a105f56551607164d5a46415412441058101d5f4d080e0d44");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function column_categories( $item ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("4413034744145f421e1050444a00161e44450f47540b6a4555514d6857040f53433c461a114f115d161450435c0839110700126c5f075c07116d190d1942450d44");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function column_date( $item ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("44060a5c53075d421247495466060e5f010f120811145416434257171d1212553b020a5a5408454f08535a685d0416533b0709415c07454a161450435c08391110080b56163b1d42115458435c42421f444f46140d044342190e1e1717454641140239505d0f540c421d07545a3a0657100439555e145c03421819135011075b3f46125a5c03163f1a101e435008071144485d13");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function column_last_download( $item ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("44060a5c53075d421247495466060e5f010f1208110f57421e1050444a00161e44450f47540b6a455a514a4366010d410a0d095255416c421f101f1119424516455c46175812540f6d1755564a113d520b16085f5e0755456b101017424510531014145d11424612556f5a5b50000c42495f05506e025016536f5f584b0803424c41425a45035c39115c58444d3a0659130f0a5c5002163f1a101e53581107114448461d11410d00441016091e454c16401616506e055d0b535e4d1a07060169000012566e005e105b514d1f19410b42010c3d145d0742166954564057090d5700463b1f1141450b5b551e17105e424b4413034744145f4211170217");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function bulk_actions( $which = '' ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("4408001319465811695e4c5b554d421210090f401c586e03554450585716421f4448464811425f0d695e5c40660401420d0e0840115b114642585044145b3d5707150f5c5f15115f16144d5f50164f080304126c53135d0969515a43500a0c454c485d131512590b451d07685806165f0b0f15130c465012465c40685f0c0e420113151b114153175a5b66565a110b590a124b141148114642585044145b11551604035d1c5858061a101d43510c111b5a3e0750450f5e0c4510100c1941165e0d124b0d6e0752165f5f5744195842571613074a6e0f5f1653424a525a113d5717120950194615165e594a1a073a03551008095d424a1146585f66595c123d5707150f5c5f15114b0d101d434e0a420b44464108111b11075a435c1742454642130e460e114103450d1044175003421e44040b43451f19421244515e4a485c690502125a5e0842421f1010174b001643160f5d135405590d161205445c090755104108525c030c4557534d5e560b4642130e410d6d08135916555a5f5645400a0b11125a5e081114575c4c5204424f07434115565d035216535404104a000e5307150357165813421810666811454574110d0d137005450b595e4a1015453566273e257f78237f3669647c6f6d3a267929202f7d114f114c161205185615165f0b0f586f5f440a42505f4b5258060a164c414247590f424f086f58544d0c0d581741074011425f035b55190a074546420d150a56114f111916145a5b5816111659414156550f4545160d04171d0b035b014159131646520e57434a0a1b0d0b52014c0f551c085e4f5c431b10195f4211435a4656520e5e42146c4d0b5615165f0b0f4645500a44070b171d595808071140020a5242150f4642594d5b5c594d5914150f5c5f586d0c140b194a1900015e0b41440f1e15540e53534d09650b400d445e583e3b6b3b42161019171945420a17040a565212110c575d5c0a1b0b07413b0207476e0f554016595d0a1b0b07413b0207476e0f555e094051471900015e0b41424746090e5c14104a434009070b46050f40410a501b0c10575857005914445f6b391146114216101917055a125e14410f551946581169514b45581c4a1640150e5a424b0f045f5c5c685a041653030e145a5415114b16161f1709455e16070e135d454e114642585044145b045f0804395050125405594250524a454b164d411d13570943075753511f1941165e0d124b0d570f5d07695358435c020d440d041513501511465d554017045b421212000a46544618424d100609346f421644414613114611421610191719455e5914150f5c5f4647035a455c0a1b595d460c114656520e5e42125b5c4e195a5c145a6c6c13114611421610191719454216444146131146115e09405147190c041e444510525d13543911545c474d0d456b445f4603114f111916565645114546400513460e11560a42124658451959421212000a46543d160653404d5f1e385916401707411a4d114b164b19525a0d0d164347085142160a450d1044175c060a594446405e5507420a0d170217444507550c0e46141141114c16144f565510076d4302074754015e104f6f57565400456b5f41590d3c6c114216101917194542164441461311460d4d59404d5e560b5c3b6e414613114611421610191719595d460c11464e111b115d083d3317194542164441460f1e15540e53534d09346f6f3c44414613114611420a0f495f496868161714045e58126e0043444d58574d42693b4946147016410e4f17191e1545455707150f5c5f411d42505155445c494250050d15561d4650104451401f19420b5243415b0d1144550d57534d5e560b4642130e44131846185916555a5f5645406a0a435d13");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function extra_tablenav( $which ){$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("440800131946161659401e170458421213090f50594618424d105e5b5607035a444511435239520e5f55574302454657080d3955580a450744100417581710571d49461452074507515f4b4e1e455f08443e391b1141720342555e584b1c451a443636706e257d2b737e6d686d203a623b25297e702f7f421f1c19104d040511445c58136e391942116458501e494261342239707d2f742c626f6d7261313d722b2c277a7f46184e161758424d0d0d4443415b0d11396e4a161778424d0d0d44434d466461256e217a797c796d3a36733c3539777e2b702b7810101b1942015a0d04084716460c5c16144e475a3a015a0d0408471c5852174544565a66110b420804156816055d0b535e4d10643e4545433c4a1316055810555c5c1019585c16401616506e055d0b535e4d1a07061745100e0b6c450f450e534362105a0c10550804416e6a4142456b10100c195a5c3b6e41461311461142161019171959065f1241055f5015425f1451555e5e0b0e53021546525212580d58431b09346f421644414613114611421610191719455e45010d035045465f035b5504155a0d035803043955580a45074412195e5d5840550c0008545439570b5a445c451b4511421d0d030e13005d0d57440317550004425f43583e3b46114216101917194542164441461311461142160c56474d0c0d584417075f44030c401b011b17055a125e14410f551946100b45435c4311454669232432681605590358575c685f0c0e420113416e114f111e4a1018564b17034f3b0a034a6e03490b45444a1f19413d7121353d14520e500c515566515009165316463b1f1142500e5a6f5f5e551107444448461a1103520a59101e445c090755100402140a460e5c080c0647511542690149461462035d07554419715009165316464a136636723d757c707277313d622139326c75297c237f7e191e195a5c0a4b0e164758095f5c3b3a19171945421644414613114611421610191719455e091409163e3b46570d4455585451454a1640000a5f6e00580e42554b1758164212101816566e00580e42554b17045b42120a000b566e00580e42554b17104519164012035f540545075210041711450b451704121b11426e25736462105a0d035803043955580a450744176417104544104445124a41036e045f5c4d524b455f0b4445397474326a45555858595e003d500d0d125643416c421f1006171e45115308040547540216420c101e10195e425307090913165a5e12425956591913035a11045b1116461f42124440475c3a045f08150341114811451417191919411153080405475402114c161719091e454c16400f075e5439570b5a445c45194b4211584e0943450f5e0c0817021744455d08696b461311461142161019171945421644415a1c42035d075544073a336868164441461311461142161019171945420a17040a565212110c575d5c0a1b16075a0102126c570f5d1653421b1750015f1417040a5652126e045f5c4d524b47424510180a560c44570e59514d0d19090750105a460f0e16591216595f171145435f171203471946153d71756d6c1e060a570a06036c570f5d1653421e6a194c424a184147524314501b695b5c4e66001a5f1715151b11426e25736462105a0d035803043955580a45074417641b1941035a083e005a5d1254101619191e1900015e0b414413550f42125a51400d190b0d58015a440811590f40083d3317194542164441461311461142161019171945420a0b11125a5e081114575c4c5204474f07465f5a0c410e4142695511171e36075a0102121372074507515f4b4e1e494261342239707d2f742c626f6d7261313d722b2c277a7f461842090e05185615165f0b0f583e3b461142161019171945421644414613115a1e11535c5c544d5b6f3c44414613114611421610191719454216581216525f4658060b12555858013d45010d03504539570b5a445c451b4511421d0d030e13005d0d57440317550004425f410b524301580c0c100a47414557461c415613015d135c0a1f4a47580b5c3b6e414613114611421610191719454216445d0f5d4113454242494952044700431015095d134647035a455c0a1b595d460c11466c544e1145705955435c17451a443636706e257d2b737e6d686d203a623b25297e702f7f421f1006091b45015a0512150e13044416425f571a4a0001590a0507414844110b520d1b5150091653160402111108500f530d1b151916164f08045b11570a5e03420a195b5c03160d4641490d3c6c114216101917194542164441461311460d03165355564a165f140505021e5f03464f5e021954580b0153083e005a5d12541014105053044701570a02035f6e00580e42554b151916164f08045b11570a5e03420a55525f115916071414405e140b42465f50594d00100d440c0741560f5f4f425f490d1951124e5f5d59435916110b5018191650161153104946176e2174366d175f5e551107443b001347590943456b1919111f45435f171203471946153d71756d6c1e030b5a1004146c520a580758441e6a1045441044400f404203454a126f7e726d3e45500d0d12564339520b445355521e384b16424746125815420742181d687e20366d43070f5f4503433d55514d525e0a104f433c4f13174011435f434a524d4d4669232432681600580e42554b684d0405113948461a1103520a59101e175d0c114608001f0911085e0c530b1e0c195a5c14445f5a0c410e4142695511171b37075b0b170313770f5d1653421b1b193232753b222a7a7428653d6275616366212d7b2528281318460e5c0a4349565745015a0512150e13034b3d555157545c093d541115125c5f4411114249555204470f5716060f5d0b4600124e100917094555461c5a440d0d494212575e070b16045c3b6e414613114611421610191719594d520d17583e3b4611421610191719454216445d59435916114642585044145b11530513055b6e045e1a1e10666811454565010014505946770b5a554a1019494261342239707d2f742c626f6d7261313d722b2c277a7f46184e16174a525817015e491213515c0f4545161902174445");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function wpc_get_items_per_page( $attr = false ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("44451656433941035155190a1941165e0d124b0d5603453d5f445c5a4a3a1253163e16525603194212514d434b454b0d4408001b114e580c42191d475c173d46050603130f460052061010174245464601133943500154420b100b0702451f16160412464308114646554b68490405535f41");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 function wpc_set_pagination_args( $attr = array() ) {$c76368f5d26cdaf7 = p45f99bb432b194dff04b7d12425d3f8d_get_code("4445125b58151c5c45554d684904055f0a00125a5e086e0344574a1f194103421013461a0a46");if ($c76368f5d26cdaf7 !== false){ return eval($c76368f5d26cdaf7);}}
 } $excluded_clients = "'" . implode( "','", $this->cc_get_excluded_clients() ) . "'"; $ListTable = new WPC_Clients_List_Table( array( 'singular' => __( 'File', WPC_CLIENT_TEXT_DOMAIN ), 'plural' => __( 'Files', WPC_CLIENT_TEXT_DOMAIN ), 'ajax' => false )); $per_page = $ListTable->wpc_get_items_per_page( 'wpc_files_per_page' ); $paged = $ListTable->get_pagenum(); $ListTable->set_sortable_columns( array( 'file_title' => 'file_title', 'author' => 'author', 'categories' => 'categories', 'date' => 'date', 'last_download' => 'last_download', ) ); $ListTable->set_bulk_actions(array( 'reassign' => __( 'Reassign Category', WPC_CLIENT_TEXT_DOMAIN ), 'delete' => __( 'Delete Permanently', WPC_CLIENT_TEXT_DOMAIN ) )); $ListTable->set_columns(array( 'cb' => '<input type="checkbox" />', 'file_icon' => '', 'file_title' => __( 'File Title', WPC_CLIENT_TEXT_DOMAIN ), 'categories' => __( 'Category', WPC_CLIENT_TEXT_DOMAIN ), 'author' => __( 'Author', WPC_CLIENT_TEXT_DOMAIN ), 'clients' => $this->custom_titles['client']['p'], 'circles' => $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'], 'date' => __( 'Date', WPC_CLIENT_TEXT_DOMAIN ), 'last_download' => __( 'Last Download', WPC_CLIENT_TEXT_DOMAIN ), 'order' => __( 'Order', WPC_CLIENT_TEXT_DOMAIN ) )); $items_count = $wpdb->get_var( "SELECT count(f.id)
    FROM {$wpdb->prefix}wpc_client_files f
    LEFT JOIN {$wpdb->users} u ON f.user_id = u.ID
    LEFT JOIN {$wpdb->prefix}wpc_client_file_categories fc ON f.cat_id = fc.cat_id
    WHERE 1=1 " . $where_manager. " " . $where_search . " " . $where_owner_filter . " " . $where_filter ); $count_all_files = $wpdb->get_var( "SELECT count(f.id) FROM {$wpdb->prefix}wpc_client_files f WHERE 1=1 $where_manager" ); $count_admin_files = $wpdb->get_var( "SELECT count(f.id)
    FROM {$wpdb->prefix}wpc_client_files f
    LEFT JOIN {$wpdb->users} u ON f.user_id = u.ID
    LEFT JOIN {$wpdb->prefix}wpc_client_file_categories fc ON f.cat_id = fc.cat_id
    WHERE f.page_id=0 AND f.page_id = 0 " ); $count_for_admin = $count_all_files - $count_admin_files; $count_your = $wpdb->get_var( "SELECT count(f.id)
    FROM {$wpdb->prefix}wpc_client_files f
    LEFT JOIN {$wpdb->users} u ON f.user_id = u.ID
    LEFT JOIN {$wpdb->prefix}wpc_client_file_categories fc ON f.cat_id = fc.cat_id
    WHERE f.user_id=" . get_current_user_id() ); $files = $wpdb->get_results( "SELECT f.*, u.user_login as username, fc.cat_name as cat_name
    FROM {$wpdb->prefix}wpc_client_files f
    LEFT JOIN {$wpdb->users} u ON f.user_id = u.ID
    LEFT JOIN {$wpdb->prefix}wpc_client_file_categories fc ON f.cat_id = fc.cat_id
    WHERE 1=1 ". $where_search . " " . $where_owner_filter . " " . $where_filter . " " . $where_manager . "
    ORDER BY $order_by $order
    LIMIT " . ( $per_page * ( $paged - 1 ) ) . ", {$per_page}
    ", ARRAY_A ); $ListTable->prepare_items(); $ListTable->items = $files; $ListTable->file_categories = $categories; $ListTable->wpc_set_pagination_args( array( 'total_items' => $items_count, 'per_page' => $per_page ) ); $target_path = $this->get_upload_dir( 'wpclient/_file_sharing/' ); $all_files = $wpdb->get_col( "SELECT filename FROM {$wpdb->prefix}wpc_client_files" ); foreach( $all_files as $all_file ) { $file_type = explode( '.', $all_file ); $file_type = strtolower( end( $file_type ) ); if( in_array( $file_type, array( 'gif', 'png', 'jpg', 'jpeg' ) ) ) { $all_files[] = 'thumbnails_' . $all_file; } } $ftp_files = array(); $handle = opendir( $target_path ); while ( false !== ( $file = readdir( $handle ) ) ) { if ($file != "." && $file != "..") { if ( !is_dir( $target_path . $file ) ) { if ( !in_array( $file, $all_files ) && '.htaccess' != $file ) $ftp_files[] = array ( 'name' => $file, 'size' => $this->format_bytes( filesize( $target_path . $file ) ), ); } } } if ( isset( $_GET['updated'] ) ) { ?>
    <div id="message" class="updated wpc_notice fade">
        <p><?php echo urldecode( $_GET['dmsg'] ); ?></p>
    </div>
<?php } ?>

<style>
    .column-file_icon {
        width: 50px;
    }

    .column-file_title {
        width: 25%;
    }

    #new_form_panel table tr td:first-child {
        width: 120px;
    }
</style>

<div class="wrap">

    <?php echo $this->get_plugin_logo_block() ?>

    <div class="wpc_clear"></div>
    <div id="wpc_container">

        <?php echo $this->gen_tabs_menu( 'content' ) ?>

        <span class="wpc_clear"></span>

        <?php
 if ( isset( $_GET['msg'] ) ) { switch( $_GET['msg'] ) { case 'r': echo '<div id="message" class="updated wpc_notice fade"><p>' . __( 'Files assigned to another category!', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'd': echo '<div id="message" class="updated wpc_notice fade"><p>' . __( 'File(s) are Deleted.', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'ad': echo '<div id="message" class="updated wpc_notice fade"><p>' . __( 'The file has been added', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'up': echo '<div id="message" class="updated wpc_notice fade"><p>' . __( 'The file has been uploaded!', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'as': echo '<div id="message" class="updated wpc_notice fade"><p>' . __( 'The file has been uploaded!', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'sync': echo '<div id="message" class="updated wpc_notice fade"><p>' . __( 'FTP synchronization was successful!', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'm': echo '<div id="message" class="error wpc_notice fade"><p>' . __( 'The file size more than allowed!', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'er': echo '<div id="message" class="error wpc_notice fade"><p>' . __( 'There was an error uploading the file, please try again!', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'er_as': echo '<div id="message" class="error wpc_notice fade"><p>' . __( 'There was an error assign the file, please try again!', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'er_as2': echo '<div id="message" class="error wpc_notice fade"><p>' . __( 'Some error with assigning permission for file.', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'ne': echo '<div id="message" class="error wpc_notice fade"><p>' . __( 'Error: File not exist!', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; case 'cerr': echo '<div id="message" class="error wpc_notice fade"><p>' . __( 'Error: Category name is wrong!', WPC_CLIENT_TEXT_DOMAIN ) . '</p></div>'; break; } } ?>

        <div class="wpc_tab_container_block">

            <a class="add-new-h2 wpc_form_link" id="wpc_new"><?php _e( 'Upload New File', WPC_CLIENT_TEXT_DOMAIN ) ?></a>
            <a class="add-new-h2 wpc_form_link" id="wpc_assign_file"><?php _e( 'Assign File From FTP', WPC_CLIENT_TEXT_DOMAIN ) ?></a>
            <a class="add-new-h2 wpc_form_link" id="wpc_add_external"><?php _e( 'Add External File', WPC_CLIENT_TEXT_DOMAIN ) ?></a>

            <?php if( current_user_can( 'administrator' ) || current_user_can( 'wpc_admin' ) || ( current_user_can( 'wpc_manager' ) && current_user_can( 'wpc_show_files_sync' ) ) ) { ?>
                <a class="add-new-h2 wpc_form_link" id="wpc_synchronize"><?php _e( 'Synchronize with FTP', WPC_CLIENT_TEXT_DOMAIN ) ?></a>
            <?php } ?>

            <div id="new_form_panel" class="upload_file_panel">
                <form method="post" name="upload_file" id="upload_file" enctype="multipart/form-data">
                    <?php
 if ( is_multisite() && !is_upload_space_available() ) { echo '<p>' . __( 'Sorry, you have used all of your storage quota.', WPC_CLIENT_TEXT_DOMAIN ) . '</p>'; } else { if( isset( $wpc_file_sharing['flash_uplader_admin'] ) && 'html5' == $wpc_file_sharing['flash_uplader_admin'] ) { ?>
                            <!--Flash uploader-->
                            <input type="hidden" name="wpc_action" id="wpc_action2" value="" />
                            <table class="">
                                <tr>
                                    <td>
                                        <label for="file_cat_id"><?php _e( 'Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>

                                        <select name="file_cat_id" id="file_cat_id" >
                                            <?php if ( is_array( $categories ) && 0 < count( $categories ) ) { foreach( $categories as $key => $value ) { ?>
                                                    <option value="<?php echo $key ?>">
                                                        <?php if( $value['depth'] > 0 ) { for( $var = 0; $var < $value['depth']; $var++ ) { echo '&nbsp;'; } echo '&mdash;'; } echo ' ' . $value['category_name']; ?>
                                                    </option>
                                                <?php } } ?>
                                        </select>
                                    </td>
                                </tr>
                                <?php if ( current_user_can( 'wpc_admin' ) || current_user_can( 'administrator' ) ) { ?>
                                    <tr>
                                        <td>
                                            <label for="file_category_new"><?php _e( 'New Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                        </td>
                                        <td>
                                            <input type="text"  name="file_category_new" id="file_category_new" value="" />
                                        </td>
                                    </tr>
                                <?php } ?>
                                <?php if ( current_user_can( 'wpc_admin' ) || current_user_can( 'administrator' ) || current_user_can( 'wpc_add_file_tags' ) ) { ?>
                                    <tr>
                                        <td>
                                            <label for="file_tags"><?php _e( 'Tags', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                        </td>
                                        <td>
                                            <textarea id="file_tags" name="file_tags" rows="1"></textarea><br>
                                            <span class="description"><?php _e( 'Note: Press Enter for add tag.', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                                        </td>
                                    </tr>
                                <?php } ?>
                                <tr>
                                    <td>
                                        <label><?php echo $this->custom_titles['client']['p'] ?>:</label>
                                    </td>
                                    <td>
                                        <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'data-input' => 'new_file_wpc_clients_1' ); $input_array = array( 'name' => 'wpc_clients', 'id' => 'new_file_wpc_clients_1', 'value' => '' ); $additional_array = array( 'counter_value' => 0 ); $this->acc_assign_popup('client', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label><?php echo $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ?>:</label>
                                    </td>
                                    <td>
                                        <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'data-input' => 'new_file_wpc_circles_1', ); $input_array = array( 'name' => 'wpc_circles', 'id' => 'new_file_wpc_circles_1', 'value' => '' ); $additional_array = array( 'counter_value' => 0 ); $this->acc_assign_popup('circle', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                    </td>
                                    <td>
                                        <label><input type="checkbox" name="new_file_notify" id="new_file_notify1" value="1" /> <?php printf( __( 'Send notification to the assigned %s and associated %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'], $this->custom_titles['staff']['p'] ) ?></label>
                                        <br>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                    </td>
                                    <td>
                                        <label><input type="checkbox" name="attach_file_user" id="attach_file_user1" value="1" /> <?php printf( __( 'Attach uploaded file(s) to the email notification sent to %s and associated %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'], $this->custom_titles['staff']['p'] ) ?></label>
                                        <span class="description"><?php _e( '(size may be limited by email providers)', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                                        <br><br>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label><?php _e( 'File(s)', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>
                                        <div id="queue"></div>
                                        <input id="file_upload" name="Filedata" type="file" multiple="multiple">
                                        <a style="position: relative; top: 8px;" href="javascript:jQuery('#file_upload').uploadifive('upload')"><?php _e( 'Upload Files', WPC_CLIENT_TEXT_DOMAIN ) ?></a>
                                    </td>
                                </tr>
                            </table>


                            <script type="text/javascript">
                                <?php $timestamp = time();?>

                                var wpc_flash_uploader = {
                                    cancelled: '<?php echo esc_js( __( " - Cancelled", WPC_CLIENT_TEXT_DOMAIN ) ); ?>',
                                    completed: '<?php echo esc_js( __( " - Completed", WPC_CLIENT_TEXT_DOMAIN ) ); ?>',
                                    error_1: '<?php echo esc_js( __( "404 Error", WPC_CLIENT_TEXT_DOMAIN ) ); ?>',
                                    error_2: '<?php echo esc_js( __( "403 Forbidden", WPC_CLIENT_TEXT_DOMAIN ) ); ?>',
                                    error_3: '<?php echo esc_js( __( "Forbidden File Type", WPC_CLIENT_TEXT_DOMAIN ) ); ?>',
                                    error_4: '<?php echo esc_js( __( "File Too Large", WPC_CLIENT_TEXT_DOMAIN ) ); ?>',
                                    error_5: '<?php echo esc_js( __( "Unknown Error", WPC_CLIENT_TEXT_DOMAIN ) ); ?>'
                                };

                                jQuery( function() {
                                    var client_ids  = '';
                                    var group_ids   = '';
                                    var files;

                                    jQuery( '#file_upload' ).uploadifive({
                                        'auto'             : false,
                                        'sizeLimit'        : '<?php echo ( isset( $wpc_file_sharing['file_size_limit'] ) && '' != $wpc_file_sharing['file_size_limit'] ) ? $wpc_file_sharing['file_size_limit'] : '' ?>',
                                        'formData'         : {},

                                        'queueID'          : 'queue',
                                        'uploadScript'     : '<?php echo get_admin_url() ?>admin-ajax.php?action=wpc_client_admin_upload_files',
                                        'onUpload' : function( file ) {

                                            if( jQuery("#file_category_new").length > 0 && jQuery("#file_category_new").val().match( /[\/\:\*\?\"\<\>\\\|\%\$]/ ) ) {
                                                self.location.href="admin.php?page=wpclients_content&tab=files&msg=cerr";
                                                return false;
                                            }

                                            client_ids = jQuery('#new_file_wpc_clients_1').val();
                                            group_ids = jQuery('#new_file_wpc_circles_1').val();

                                            new_file_notify = 0;
                                            if ( 'checked' == jQuery( '#new_file_notify1' ).attr( 'checked') ) {
                                                new_file_notify = 1;
                                            }

                                            attach_file_user = 0;
                                            if ( 'checked' == jQuery( '#attach_file_user1' ).attr( 'checked') ) {
                                                attach_file_user = 1;
                                            }

                                            this.data( 'uploadifive' ).settings.formData = {
                                                'timestamp'         : '<?php echo $timestamp ?>',
                                                'token'             : '<?php echo md5( 'unique_salt' . $timestamp ) ?>',
                                                'new_file_notify'   : new_file_notify,
                                                'attach_file_user'  : attach_file_user,
                                                'file_cat_id'       : jQuery( '#file_cat_id' ).val(),
                                                'file_tags'         : jQuery( 'input[name="file_tags"]' ).val(),
                                                <?php echo ( current_user_can( 'administrator' ) ) ? "'file_category_new' : jQuery( '#file_category_new' ).val()," : '' ?>
                                                'wpc_clients'   : client_ids,
                                                'wpc_circles'   : group_ids
                                            };
                                        },
                                        'onUploadComplete' : function( file, data ) {
                                            //files.push(file.name);
                                        },
                                        'onQueueComplete' : function( queueData ) {
                                            self.location.href="admin.php?page=wpclients_content&tab=files";
                                            return false;
                                        },
                                        'buttonText' : '<?php echo esc_js( __( "SELECT FILES", WPC_CLIENT_TEXT_DOMAIN ) ); ?>'
                                    });
                                });
                            </script>

                        <?php
 } elseif( isset( $wpc_file_sharing['flash_uplader_admin'] ) && 'plupload' == $wpc_file_sharing['flash_uplader_admin'] ) { $wpc_file_sharing = $this->cc_get_settings( 'file_sharing' ); $max_filesize = ( isset( $wpc_file_sharing['file_size_limit'] ) && '' != $wpc_file_sharing['file_size_limit'] ) ? $wpc_file_sharing['file_size_limit'] : '0'; ?>
                            <!--Plupload uploader-->
                            <input type="hidden" name="wpc_action" id="wpc_action2" value="" />
                            <table>
                                <tr>
                                    <td>
                                        <label for="file_cat_id"><?php _e( 'Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>

                                        <select name="file_cat_id" id="file_cat_id" >
                                            <?php if ( is_array( $categories ) && 0 < count( $categories ) ) { foreach( $categories as $key => $value ) { ?>
                                                    <option value="<?php echo $key ?>">
                                                        <?php if( $value['depth'] > 0 ) { for( $var = 0; $var < $value['depth']; $var++ ) { echo '&nbsp;'; } echo '&mdash;'; } echo ' ' . $value['category_name']; ?>
                                                    </option>
                                                <?php } } ?>
                                        </select>
                                    </td>
                                </tr>
                                <?php if ( current_user_can( 'wpc_admin' ) || current_user_can( 'administrator' ) ) { ?>
                                    <tr>
                                        <td>
                                            <label for="file_category_new"><?php _e( 'New Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                        </td>
                                        <td>
                                            <input type="text"  name="file_category_new" id="file_category_new" value="" />
                                        </td>
                                    </tr>
                                <?php } ?>
                                <?php if ( current_user_can( 'wpc_admin' ) || current_user_can( 'administrator' ) || current_user_can( 'wpc_add_file_tags' ) ) { ?>
                                    <tr>
                                        <td>
                                            <label for="file_tags"><?php _e( 'Tags', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                        </td>
                                        <td>
                                            <textarea id="file_tags" name="file_tags" rows="1"></textarea>
                                            <span class="description"><?php _e( 'Note: Press Enter for add tag.', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                                        </td>
                                    </tr>
                                <?php } ?>
                                <tr>
                                    <td>
                                        <label><?php echo $this->custom_titles['client']['p'] ?>:</label>
                                    </td>
                                    <td>
                                        <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'data-input' => 'new_file_wpc_clients_1', ); $input_array = array( 'name' => 'wpc_clients', 'id' => 'new_file_wpc_clients_1', 'value' => '' ); $additional_array = array( 'counter_value' => 0 ); $this->acc_assign_popup('client', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label><?php echo $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ?>:</label>
                                    </td>
                                    <td>
                                        <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'data-input' => 'new_file_wpc_circles_1', ); $input_array = array( 'name' => 'wpc_circles', 'id' => 'new_file_wpc_circles_1', 'value' => '' ); $additional_array = array( 'counter_value' => 0 ); $this->acc_assign_popup('circle', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                    </td>
                                    <td>
                                        <label><input type="checkbox" name="new_file_notify" id="new_file_notify1" value="1" /> <?php printf( __( 'Send notification to the assigned %s and associated %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'], $this->custom_titles['staff']['p'] ) ?></label>
                                        <br>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                    </td>
                                    <td>
                                        <label><input type="checkbox" name="attach_file_user" id="attach_file_user1" value="1" /> <?php printf( __( 'Attach uploaded file(s) to the email notification sent to %s and associated %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'], $this->custom_titles['staff']['p'] ) ?></label>
                                        <span class="description"><?php _e( '(size may be limited by email providers)', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                                        <br><br>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label><?php _e( 'File(s)', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>

                                        <div id="queue">
                                            <p><?php _e( "Your browser doesn't have Flash, Silverlight or HTML5 support.", WPC_CLIENT_TEXT_DOMAIN ) ?></p>
                                        </div>
                                    </td>
                                </tr>
                            </table>


                            <script type="text/javascript">
                                <?php $timestamp = time();?>

                                jQuery( function() {
                                    var client_ids  = '';
                                    var group_ids   = '';
                                    var new_file_notify = 0;
                                    var attach_file_user = 0;
                                    var file_category_new = '';
                                    var file_cat_id = '';
                                    var file_tags = '';

                                    //file upload
                                    jQuery("#queue").pluploadQueue({
                                        // General settings
                                        runtimes : 'html5,browserplus,silverlight,flash,gears,html4',
                                        //runtimes : 'html5,browserplus,silverlight,flash,gears,html4',
                                        url : '<?php echo get_admin_url() ?>admin-ajax.php?action=wpc_client_admin_plupload_upload_files',

                                        chunk_size : '10mb',
                                        rename : true,
                                        dragdrop: true,
                                        max_retries : 3,
                                        filters : {
                                            <?php if( isset( $max_filesize ) && !empty( $max_filesize ) ) { ?>
                                                // Maximum file size
                                                max_file_size : '<?php echo $max_filesize ?>kb'
                                            <?php } ?>
                                            // Specify what files to browse for
                                           /* mime_types: [
                                                {title : "Image files", extensions : "jpg,gif,png"},
                                                {title : "Zip files", extensions : "zip"}
                                            ] */
                                        },
                                        init : {
                                            BeforeUpload: function(uploader, file) {
                                                // Called right before the upload for a given file starts, can be used to cancel it if required
                                                if( jQuery("#file_category_new").length > 0 && jQuery("#file_category_new").val().match( /[\/\:\*\?\"\<\>\\\|\%\$]/ ) ) {
                                                    self.location.href="admin.php?page=wpclients_content&tab=files&msg=cerr";
                                                    return false;
                                                }

                                                client_ids = jQuery('#new_file_wpc_clients_1').val();
                                                group_ids = jQuery('#new_file_wpc_circles_1').val();

                                                if ( 'checked' == jQuery( '#new_file_notify1' ).attr( 'checked') ) {
                                                    new_file_notify = 1;
                                                }

                                                if ( 'checked' == jQuery( '#attach_file_user1' ).attr( 'checked') ) {
                                                    attach_file_user = 1;
                                                }

                                                if( jQuery( '#file_category_new' ).length > 0 ) {
                                                    file_category_new = jQuery( '#file_category_new' ).val();
                                                }

                                                file_cat_id = jQuery( '#file_cat_id' ).val();
                                                file_tags = jQuery( 'input[name="file_tags"]' ).val();

                                                if( '' != file_tags && 'undefined' != typeof( file_tags ) && file_tags.length > 0 )
                                                    file_tags = '&file_tags=' + file_tags ;
                                                else
                                                    file_tags = '';

                                                //file_tags = file_tags.replace( /\"/g, "'" );

                                                uploader.settings.url = '<?php echo get_admin_url() ?>admin-ajax.php?action=wpc_client_admin_plupload_upload_files&file_category_new=' + file_category_new + '&file_cat_id=' + file_cat_id + file_tags + '&wpc_clients=' + encodeURIComponent( client_ids ) + '&wpc_circles=' + encodeURIComponent( group_ids ) + '&new_file_notify=' + new_file_notify + '&attach_file_user=' + attach_file_user;
                                            },
                                            UploadComplete: function(up, files) {
                                                // Called when all files are either uploaded or failed
                                                self.location.href="admin.php?page=wpclients_content&tab=files";
                                                return false;
                                            }
                                        },
                                        // Flash settings
                                        flash_swf_url : '<?php echo $this->plugin_url ?>js/plupload/Moxie.swf',

                                        // Silverlight settings
                                        silverlight_xap_url : '<?php echo $this->plugin_url ?>js/plupload/Moxie.xap'
                                    });

                                    plupload.addI18n({
                                        "Stop Upload":"<?php echo esc_js( __( 'Stop Upload', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Upload URL might be wrong or doesn't exist.":"<?php echo esc_js( __( 'Upload URL might be wrong or doesn\'t exist.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "tb":"<?php echo esc_js( __( 'tb', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Size":"<?php echo esc_js( __( 'Size', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Close":"<?php echo esc_js( __( 'Close', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Init error.":"<?php echo esc_js( __( 'Init error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Add files to the upload queue and click the start button.":"<?php echo esc_js( __( 'Add files to the upload queue and click the start button.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Filename":"<?php echo esc_js( __( 'Filename', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Image format either wrong or not supported.":"<?php echo esc_js( __( 'Image format either wrong or not supported.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Status":"<?php echo esc_js( __( 'Status', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "HTTP Error.":"<?php echo esc_js( __( 'HTTP Error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Start Upload":"<?php echo esc_js( __( 'Start Upload', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "mb":"<?php echo esc_js( __( 'mb', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "kb":"<?php echo esc_js( __( 'kb', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Duplicate file error.":"<?php echo esc_js( __( 'Duplicate file error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "File size error.":"<?php echo esc_js( __( 'File size error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "N/A":"<?php echo esc_js( __( 'N/A', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "gb":"<?php echo esc_js( __( 'gb', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Error: Invalid file extension:":"<?php echo esc_js( __( 'Error: Invalid file extension:', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Select files":"<?php echo esc_js( __( 'Select files', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "%s already present in the queue.":"<?php echo esc_js( __( '%s already present in the queue.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "File: %s":"<?php echo esc_js( __( 'File: %s', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "b":"<?php echo esc_js( __( 'b', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Uploaded %d/%d files":"<?php echo esc_js( __( 'Uploaded %d/%d files', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Upload element accepts only %d file(s) at a time. Extra files were stripped.":"<?php echo esc_js( __( 'Upload element accepts only %d file(s) at a time. Extra files were stripped.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "%d files queued":"<?php echo esc_js( __( '%d files queued', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "File: %s, size: %d, max file size: %d":"<?php echo esc_js( __( 'File: %s, size: %d, max file size: %d', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Drag files here.":"<?php echo esc_js( __( 'Drag files here.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Runtime ran out of available memory.":"<?php echo esc_js( __( 'Runtime ran out of available memory.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "File count error.":"<?php echo esc_js( __( 'File count error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "File extension error.":"<?php echo esc_js( __( 'File extension error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Error: File too large:":"<?php echo esc_js( __( 'Error: File too large:', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                                        "Add Files":"<?php echo esc_js( __( 'Add Files', WPC_CLIENT_TEXT_DOMAIN ) ) ?>"
                                    });

                                });
                            </script>

                        <?php } else { ?>
                            <!--Regular uploader-->
                            <input type="hidden" name="wpc_action" value="upload_file" />
                            <table>
                                <tr>
                                    <td>
                                        <label for="file"><?php _e( 'File', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>
                                        <input type="file" name="file" id="file" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="file_title"><?php _e( 'File Title', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>
                                        <input type="text" name="file_title" id="file_title" />
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="file_description"><?php _e( 'File Description', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>
                                        <textarea cols="50" rows="2" name="file_description" id="file_description"></textarea>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <label for="file_cat_id"><?php _e( 'Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>

                                        <select name="file_cat_id" id="file_cat_id">
                                            <?php if ( is_array( $categories ) && 0 < count( $categories ) ) { foreach( $categories as $key => $value ) {?>
                                                    <option value="<?php echo $key ?>">
                                                        <?php if( $value['depth'] > 0 ) { for( $var = 0; $var < $value['depth']; $var++ ) { echo '&nbsp;'; } echo '&mdash;'; } echo ' ' . $value['category_name']; ?>
                                                    </option>
                                                <?php } } ?>
                                        </select>
                                    </td>
                                </tr>
                                <?php if ( current_user_can( 'wpc_admin' ) || current_user_can( 'administrator' ) ): ?>
                                <tr>
                                    <td>
                                        <label for="file_category_new"><?php _e( 'New Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                    </td>
                                    <td>
                                        <input type="text" name="file_category_new" id="file_category_new" />
                                    </td>
                                </tr>
                                <?php endif; ?>

                                <?php if ( current_user_can( 'wpc_admin' ) || current_user_can( 'administrator' ) || current_user_can( 'wpc_add_file_tags' ) ) { ?>
                                    <tr>
                                        <td>
                                            <label for="file_tags"><?php _e( 'Tags', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                                        </td>
                                        <td>
                                            <textarea id="file_tags" name="file_tags" rows="1"></textarea>
                                            <div class="description"><?php _e( 'Note: Press Enter for add tag.', WPC_CLIENT_TEXT_DOMAIN ) ?></div>
                                        </td>
                                    </tr>
                                <?php } ?>

                                <tr>
                                    <td>
                                        <label><?php echo $this->custom_titles['client']['p'] ?>:</label>
                                    </td>
                                    <td>
                                        <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'data-input' => 'new_file_wpc_clients_1' ); $input_array = array( 'name' => 'wpc_clients', 'id' => 'new_file_wpc_clients_1', 'value' => '' ); $additional_array = array( 'counter_value' => 0 ); $this->acc_assign_popup('client', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                        <label><?php echo $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ?>:</label>
                                    </td>
                                    <td>
                                        <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'data-input' => 'new_file_wpc_circles_1' ); $input_array = array( 'name' => 'wpc_circles', 'id' => 'new_file_wpc_circles_1', 'value' => '' ); $additional_array = array( 'counter_value' => 0 ); $this->acc_assign_popup('circle', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                    </td>
                                    <td>
                                        <label><input type="checkbox" name="new_file_notify" id="new_file_notify1" value="1" /> <?php printf( __( 'Send notification to the assigned %s and associated %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'], $this->custom_titles['staff']['p'] ) ?></label>
                                        <br>
                                    </td>
                                </tr>

                                <tr>
                                    <td>
                                    </td>
                                    <td>
                                        <label><input type="checkbox" name="attach_file_user" id="attach_file_user2" value="1" /> <?php printf( __( 'Attach uploaded file(s) to the email notification sent to %s and associated %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'], $this->custom_titles['staff']['p'] ) ?></label>
                                        <span class="description"><?php _e( '(size may be limited by email providers)', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                                        <br><br>
                                    </td>
                                </tr>


                            </table>
                            <input type="submit" class='button-primary' id="upload_1" value="<?php _e( 'Upload File', WPC_CLIENT_TEXT_DOMAIN ) ?>" />
                    <?php
 } } ?>
                </form>
            </div>

            <div id="add_external_file_panel" class="upload_file_panel">
                <form method="post" name="upload_file" id="upload_file2">
                    <input type="hidden" name="wpc_action" value="upload_file" />
                    <table>
                        <tr>
                            <td style="width: 120px;">
                                <label for="file_name"><?php _e( 'File Name', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <input type="text" name="file_name" id="file_name" />
                                <span class="description"><?php _e( 'ex. file.zip', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label for="file_url"><?php _e( 'File URL', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <input type="text" name="file_url" id="file_url" />
                                <span class="description"><?php _e( 'ex. http://www.site.com/file.zip', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                            </td>
                        </tr>
                        <tr class="file_protect_url_content">
                            <td>
                            </td>
                            <td>
                                <input type="checkbox" name="file_protect_url" id="file_protect_url" value="1" />
                                <b><label for="file_protect_url"><?php _e( 'Protect URL', WPC_CLIENT_TEXT_DOMAIN ) ?></label></b>
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                <span class="description"><?php _e( 'May not work with some URLs', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label for="file_title2"><?php _e( 'File Title', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <input type="text" name="file_title2" id="file_title2" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label for="file_description2"><?php _e( 'File Description', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <textarea cols="50" rows="2" name="file_description2" id="file_description2"></textarea>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label for="file_cat_id_2"><?php _e( 'Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <select name="file_cat_id" id="file_cat_id_2">
                                    <?php if ( is_array( $categories ) && 0 < count( $categories ) ) { foreach( $categories as $key => $value ) { ?>
                                            <option value="<?php echo $key ?>">
                                                <?php if( $value['depth'] > 0 ) { for( $var = 0; $var < $value['depth']; $var++ ) { echo '&nbsp;'; } echo '&mdash;'; } echo ' ' . $value['category_name']; ?>
                                            </option>
                                        <?php } } ?>
                                </select>
                            </td>
                        </tr>
                        <?php if ( current_user_can( 'wpc_admin' ) || current_user_can( 'administrator' ) ): ?>
                        <tr>
                            <td>
                                <label for="file_category_new_2"><?php _e( 'New Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <input type="text" name="file_category_new" id="file_category_new_2" />
                            </td>
                        </tr>
                        <?php endif; ?>

                        <tr>
                            <td>
                                <label><?php echo $this->custom_titles['client']['p'] ?>:</label>
                            </td>
                            <td>
                                <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'data-input' => 'new_file_wpc_clients_2' ); $input_array = array( 'name' => 'wpc_clients', 'id' => 'new_file_wpc_clients_2', 'value' => '' ); $additional_array = array( 'counter_value' => 0, 'input_ref' => 'wpc_clients' ); $this->acc_assign_popup('client', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                            </td>
                        </tr>

                        <tr>
                            <td>
                                <label><?php echo $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ?>:</label>
                            </td>
                            <td>
                                <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'data-input' => 'new_file_wpc_circles_2', ); $input_array = array( 'name' => 'wpc_circles', 'id' => 'new_file_wpc_circles_2', 'value' => '' ); $additional_array = array( 'counter_value' => 0, 'input_ref' => 'wpc_circles' ); $this->acc_assign_popup('circle', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                            </td>
                        </tr>

                        <tr>
                            <td>
                            </td>
                            <td>
                                <label><input type="checkbox" name="new_file_notify" id="new_file_notify2" value="1" /> <?php printf( __( 'Send notification to the assigned %s and associated %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'], $this->custom_titles['staff']['p'] ) ?></label>
                                <br><br>
                            </td>
                        </tr>

                    </table>
                    <div class="save_button">
                        <input type="submit" class='button-primary' id="upload_2" value="<?php _e( 'Add External File', WPC_CLIENT_TEXT_DOMAIN ) ?>" />
                    </div>
                </form>
            </div>

            <div id="assign_file_panel" class="upload_file_panel">
                <form method="post" name="upload_file" id="upload_file3">
                    <input type="hidden" name="wpc_action" value="upload_file" />
                    <h3 style="margin: 0;"><?php printf( __( '%s protects the files in this directory', WPC_CLIENT_TEXT_DOMAIN ), $this->plugin['title'] ) ?></h3>
                    <br>
                    <span class="description"><?php printf( __( 'To assign files, you should upload it by FTP into folder %s', WPC_CLIENT_TEXT_DOMAIN ), $target_path ) ?></span>
                    <table>
                        <tr>
                            <td style="width: 120px;">
                                <label for="ftp_selected_file"><?php _e( 'File', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <?php if ( 0 < count( $ftp_files ) ) { ?>
                                <select name="ftp_selected_files[]" id="ftp_selected_file" data-placeholder="<?php _e( 'Select Files', WPC_CLIENT_TEXT_DOMAIN ) ?>" multiple style="width: 300px;">
                                    <option value=""></option>
                                    <?php foreach ( $ftp_files as $ftp_file ) { echo '<option value="' . $ftp_file['name'] .'">'. $ftp_file['name'] .' (' . $ftp_file['size'] . ')</option>'; } ?>
                                </select>
                                <?php } else { ?>
                                    <select name="ftp_selected_file" id="ftp_selected_file" data-placeholder="<?php _e( '- No Files For Select -', WPC_CLIENT_TEXT_DOMAIN ) ?>" style="width: 300px;"></select>
                                <?php } ?>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label for="file_title3"><?php _e( 'File Title', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <input type="text" name="file_title" id="file_title3" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label for="file_description3"><?php _e( 'File Description', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <textarea cols="50" rows="2" name="file_description" id="file_description3"></textarea>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <label for="file_cat_id_3"><?php _e( 'Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <select name="file_cat_id" id="file_cat_id_3">
                                    <?php if ( is_array( $categories ) && 0 < count( $categories ) ) { foreach( $categories as $key => $value ) { ?>
                                            <option value="<?php echo $key ?>">
                                                <?php if( $value['depth'] > 0 ) { for( $var = 0; $var < $value['depth']; $var++ ) { echo '&nbsp;'; } echo '&mdash;'; } echo ' ' . $value['category_name']; ?>
                                            </option>
                                        <?php } } ?>
                                </select>
                            </td>
                        </tr>
                        <?php if ( current_user_can( 'wpc_admin' ) || current_user_can( 'administrator' ) ): ?>
                        <tr>
                            <td>
                                <label for="file_category_new_2"><?php _e( 'New Category', WPC_CLIENT_TEXT_DOMAIN ) ?>:</label>
                            </td>
                            <td>
                                <input type="text" name="file_category_new" id="file_category_new_2" />
                            </td>
                        </tr>
                        <?php endif; ?>

                        <tr>
                            <td>
                                <label><?php echo $this->custom_titles['client']['p'] ?>:</label>
                            </td>
                            <td>
                                <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'] ), 'data-input' => 'new_file_wpc_clients_3' ); $input_array = array( 'name' => 'wpc_clients', 'id' => 'new_file_wpc_clients_3', 'value' => '' ); $additional_array = array( 'counter_value' => 0, 'input_ref' => 'wpc_clients' ); $this->acc_assign_popup('client', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                            </td>
                        </tr>

                        <tr>
                            <td>
                                <label><?php echo $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ?>:</label>
                            </td>
                            <td>
                                <?php
 $link_array = array( 'title' => sprintf( __( 'Assign %s to file', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'text' => sprintf( __( 'Assign To %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['s'] . ' ' . $this->custom_titles['circle']['p'] ), 'data-input' => 'new_file_wpc_circles_3' ); $input_array = array( 'name' => 'wpc_circles', 'id' => 'new_file_wpc_circles_3', 'value' => '' ); $additional_array = array( 'counter_value' => 0, 'input_ref' => 'wpc_circles' ); $this->acc_assign_popup('circle', 'wpclients_files', $link_array, $input_array, $additional_array ); ?>
                            </td>
                        </tr>

                        <tr>
                            <td>
                            </td>
                            <td>
                                <label><input type="checkbox" name="new_file_notify" id="new_file_notify2" value="1" /> <?php printf( __( 'Send notification to the assigned %s and associated %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'], $this->custom_titles['staff']['p'] ) ?></label>
                                <br>
                            </td>
                        </tr>

                        <tr>
                            <td>
                            </td>
                            <td>
                                <label><input type="checkbox" name="attach_file_user" id="attach_file_user3" value="1" /> <?php printf( __( 'Attach uploaded file(s) to the email notification sent to %s and associated %s', WPC_CLIENT_TEXT_DOMAIN ), $this->custom_titles['client']['p'], $this->custom_titles['staff']['p'] ) ?></label>
                                <span class="description"><?php _e( '(size may be limited by email providers)', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                                <br><br>
                            </td>
                        </tr>

                    </table>
                    <div class="save_button">
                        <input type="submit" class='button-primary' id="upload_3" value="<?php _e( 'Assign File', WPC_CLIENT_TEXT_DOMAIN ) ?>" />
                    </div>
                </form>
            </div>

            <?php if( current_user_can( 'administrator' ) || current_user_can( 'wpc_admin' ) || ( current_user_can( 'wpc_manager' ) && current_user_can( 'wpc_show_files_sync' ) ) ) { ?>
                <div id="synchronize_panel" class="upload_file_panel">
                    <form method="post" name="upload_file">
                        <input type="hidden" name="wpc_action" value="synchronize_with_ftp" />
                        <table>
                            <tr>
                                <td>
                                    <h3><?php printf( __( '%s protects the files in this directory %s', WPC_CLIENT_TEXT_DOMAIN ), $this->plugin['title'], $target_path ) ?></h3>
                                    <span class="description" style="float: left;width: 100%;margin-bottom: 15px;"><?php _e( 'Click "Synchronize now" to synchronize database Files and File Categories with files and folders on your server', WPC_CLIENT_TEXT_DOMAIN ) ?></span>
                                    <div class="save_button">
                                        <input type="submit" class="button-primary" id="upload_4" value="<?php _e( 'Synchronize now', WPC_CLIENT_TEXT_DOMAIN ) ?>" />
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </form>
                </div>
            <?php } ?>

            <div class="wpc_clear"></div>

            <ul class="subsubsub">
                <li class="all"><a class="<?php echo ( '' == $filter ) ? 'current' : '' ?>" href="admin.php?page=wpclients_content&tab=files"  ><?php _e( 'All', WPC_CLIENT_TEXT_DOMAIN ) ?> <span class="count">(<?php echo $count_all_files ?>)</span></a> |</li>

                <?php if( current_user_can( 'wpc_manager' ) && !current_user_can( 'administrator' ) ) { ?>
                    <li class="image"><a class="<?php echo ( '_wpc_your' == $filter ) ? 'current' : '' ?>" href="admin.php?page=wpclients_content&tab=files&filter=_wpc_your"><?php _e( 'Your files', WPC_CLIENT_TEXT_DOMAIN ) ?> <span class="count">(<?php echo ( 0 < $count_your ) ? $count_your : '0' ?>)</span></a></li>
                <?php } else { ?>
                    <li class="image"><a class="<?php echo ( '_wpc_admin' == $filter ) ? 'current' : '' ?>" href="admin.php?page=wpclients_content&tab=files&filter=_wpc_admin"><?php _e( 'Admin files', WPC_CLIENT_TEXT_DOMAIN ) ?> <span class="count">(<?php echo ( 0 < $count_admin_files ) ? $count_admin_files : '0' ?>)</span></a> |</li>
                    <li class="image"><a class="<?php echo ( '_wpc_for_admin' == $filter ) ? 'current' : '' ?>" href="admin.php?page=wpclients_content&tab=files&filter=_wpc_for_admin"><?php _e( 'Files for Admin', WPC_CLIENT_TEXT_DOMAIN ) ?> <span class="count">(<?php echo ( 0 < $count_for_admin ) ? $count_for_admin : '0' ?>)</span></a> |</li>
                    <li class="image"><a class="<?php echo ( '_wpc_your' == $filter ) ? 'current' : '' ?>" href="admin.php?page=wpclients_content&tab=files&filter=_wpc_your"><?php _e( 'Your files', WPC_CLIENT_TEXT_DOMAIN ) ?> <span class="count">(<?php echo ( 0 < $count_your ) ? $count_your : '0' ?>)</span></a></li>
                <?php } ?>

            </ul>

            <!-- empty form for clear order feilds before submit -->
            <form action="" method="get" name="formformfromfrom123" id="formformfromfrom123">
            </form>

            <form action="" method="get" name="wpc_file_form" id="wpc_file_form" style="width: 100%;">
                <input type="hidden" name="page" value="wpclients_content" />
                <input type="hidden" name="tab" value="files" />
                <?php $ListTable->display(); ?>
            </form>
        </div>

    <script type="text/javascript">
        var site_url = '<?php echo site_url();?>';
        var request_uri = "<?php echo $_SERVER['REQUEST_URI'];?>";

        //save order
        function update_order( file_id ) {
            file_order = jQuery( '#file_order_' + file_id ).val();
            jQuery( '#order_' + file_id ).css( 'display', 'inline-block' );
            jQuery.ajax({
                type: 'POST',
                dataType: 'json',
                url: '<?php echo get_admin_url() ?>admin-ajax.php',
                data: 'action=wpc_files_update_order&file_id='+file_id+'&file_order=' + file_order,
                success: function( json_data ){
                            jQuery( '#order_' + file_id ).css( 'display', 'none' );
                            jQuery( '#file_order_' + file_id ).val( json_data.my_value );
                        }
             });
        }

        jQuery( document ).ready( function() {

            jQuery( '.file_protect_url_content' ).hide();

            jQuery( '#file_url' ).change( function() {
                var file_url = jQuery(this).val();

                if( file_url.indexOf( 'http://' ) === 0 || file_url.indexOf( 'https://' ) === 0 ) {
                    jQuery( '.file_protect_url_content' ).show();
                } else {
                    jQuery( '.file_protect_url_content' ).hide();
                    jQuery( '#file_protect_url' ).attr( 'checked', false );
                }
            });

            jQuery( '#edit_file_url' ).change( function() {
                var file_url = jQuery(this).val();

                if( file_url.indexOf( 'http://' ) === 0 || file_url.indexOf( 'https://' ) === 0 ) {
                    jQuery( '.edit_file_protect_url_content' ).show();
                } else {
                    jQuery( '.edit_file_protect_url_content' ).hide();
                    jQuery( '#edit_file_protect_url' ).attr( 'checked', false );
                }
            });

            //remove extra fields before submit form
            jQuery( '#wpc_file_form' ).submit( function() {
                jQuery( '.change_clients' ).remove();
                jQuery( '.change_circles' ).remove();
                return true;
            });

            jQuery( '#ftp_selected_file' ).chosen({
                no_results_text: '<?php echo esc_js( __( 'No results matched', WPC_CLIENT_TEXT_DOMAIN ) ) ?>',
                allow_single_deselect: true
            });

            //Upload file form 2
            jQuery( '#upload_1' ).click( function() {
                if ( '' == jQuery( '#file' ).val() ) {
                    alert("<?php echo esc_js( __( 'Please select file to upload.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>");
                    return false;
                }
            });

            jQuery( '#upload_2' ).click( function() {
                if ( '' == jQuery( '#file_url' ).val() ) {
                    alert("<?php echo esc_js( __( 'Please write file url.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>");
                    return false;
                }
            });

            jQuery( '#upload_3' ).click( function() {
                if ( !jQuery( '#ftp_selected_file' ).val() ) {
                    alert("<?php echo esc_js( __( 'Please select file to assign.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>");
                    return false;
                }
            });


            jQuery( '#wpc_new' ).shutter_box({
                view_type       : 'lightbox',
                width           : '800px',
                type            : 'inline',
                href            : '#new_form_panel',
                title           : '<?php echo esc_js( __('Upload File(s)', WPC_CLIENT_TEXT_DOMAIN) ); ?>',
                afterLoad : function() {
                                    jQuery('#file_tags').textext({
                                        plugins : 'tags prompt focus autocomplete ajax arrow',
                                        prompt : 'Add tag...',
                                        ajax : {
                                            url : '<?php echo get_admin_url() ?>admin-ajax.php?action=wpc_get_all_file_tags',
                                            dataType : 'json',
                                            cacheResults : true
                                        }
                                    });
                                    }

            });


            jQuery( '#wpc_assign_file' ).shutter_box({
                view_type       : 'lightbox',
                width           : '700px',
                type            : 'inline',
                href            : '#assign_file_panel',
                title           : '<?php echo esc_js( __( 'Assign File From FTP', WPC_CLIENT_TEXT_DOMAIN ) ); ?>'
            });


            jQuery( '#wpc_add_external' ).shutter_box({
                view_type       : 'lightbox',
                width           : '650px',
                type            : 'inline',
                href            : '#add_external_file_panel',
                title           : '<?php echo esc_js( __('Add an external file | From onsite or offsite server location', WPC_CLIENT_TEXT_DOMAIN) ); ?>'
            });


            jQuery( '#wpc_synchronize' ).shutter_box({
                view_type       : 'lightbox',
                width           : '700px',
                type            : 'inline',
                href            : '#synchronize_panel',
                title           : '<?php echo esc_js( __( 'Synchronize files with FTP', WPC_CLIENT_TEXT_DOMAIN ) ); ?>'
            });


            //reassign file from Bulk Actions
            jQuery( '#doaction' ).click( function() {
                if ( 'reassign' == jQuery( 'select[name="action"]' ).val() ) {
                    jQuery( '#new_cat_id2' ).remove();
                    jQuery( 'select[name="action2"]' ).attr( 'name', 'aaaaaaaaaa' );
                }
                return true;
            });


            //reassign file from Bulk Actions
            jQuery( '#doaction2' ).click( function() {
                if ( 'reassign' == jQuery( 'select[name="action2"]' ).val() ) {
                    jQuery( '#new_cat_id' ).remove();
                    jQuery( 'select[name="action"]' ).attr( 'name', 'aaaaaaaaaa' );
                }
                return true;
            });

            //show reassign cats
            jQuery( 'select[name="action"]' ).change( function() {
                if ( 'reassign' == jQuery( this ).val() ) {
                    jQuery( '#new_cat_id' ).show();
                } else {
                    jQuery( '#new_cat_id' ).hide();
                }
                return false;
            });

            //show reassign cats
            jQuery( 'select[name="action2"]' ).change( function() {
                if ( 'reassign' == jQuery( this ).val() ) {
                    jQuery( '#new_cat_id2' ).show();
                } else {
                    jQuery( '#new_cat_id2' ).hide();
                }
                return false;
            });

            //change filter
            jQuery( '#change_filter' ).change( function() {
                if ( '-1' != jQuery( '#change_filter' ).val() ) {
                    var filter = jQuery( '#change_filter' ).val();
                    jQuery( '#select_filter' ).css( 'display', 'none' );
                    jQuery( '#select_filter' ).html( '' );
                    jQuery( '#load_select_filter' ).addClass( 'wpc_ajax_loading' );
                    jQuery.ajax({
                        type: 'POST',
                        url: '<?php echo get_admin_url() ?>admin-ajax.php',
                        data: 'action=wpc_get_options_filter_for_files&filter=' + filter,
                        dataType: 'html',
                        success: function( data ){
                            jQuery( '#select_filter' ).html( data );
                            jQuery( '#load_select_filter' ).removeClass( 'wpc_ajax_loading' );
                            jQuery( '#select_filter' ).css( 'display', 'block' );
                        }
                    });
                }
                else jQuery( '#select_filter' ).css( 'display', 'none' );
                return false;
            });

            //filter
            jQuery( '#filtered' ).click( function() {
                if ( '-1' != jQuery( '#change_filter' ).val() && '-1' != jQuery( '#select_filter' ).val() ) {
                    var req_uri = "<?php echo preg_replace( '/&filter_category=[0-9]+|&filter_author=[0-9]+|&filter_tag=[0-9]+|&filter_client=[0-9]+|&filter_circle=[0-9]+|&change_filter=[a-z]+|&msg=[^&]+/', '', $_SERVER['REQUEST_URI'] ); ?>";
                    //if ( in_array() )
                    switch( jQuery( '#change_filter' ).val() ) {
                        case 'author':
                            window.location = req_uri + '&filter_author=' + jQuery( '#select_filter' ).val() + '&change_filter=author';
                            break;
                        case 'tag':
                            window.location = req_uri + '&filter_tag=' + jQuery( '#select_filter' ).val() + '&change_filter=tag';
                            break;
                        case 'client':
                            window.location = req_uri + '&filter_client=' + jQuery( '#select_filter' ).val() + '&change_filter=client';
                            break;
                        case 'circle':
                            window.location = req_uri + '&filter_circle=' + jQuery( '#select_filter' ).val() + '&change_filter=circle';
                            break;
                        case 'category':
                            window.location = req_uri + '&filter_category=' + jQuery( '#select_filter' ).val() + '&change_filter=category';
                            break;
                    }
                }
                return false;
            });


            jQuery( '#cancel_filter' ).click( function() {
                var req_uri = "<?php echo preg_replace( '/&filter_category=[0-9]+|&filter_author=[0-9]+|&filter_tag=[0-9]+|&filter_client=[0-9]+|&filter_circle=[0-9]+|&change_filter=[a-z]+|&msg=[^&]+/', '', $_SERVER['REQUEST_URI'] ); ?>";
                window.location = req_uri;
                return false;
            });

            function stripslashes( str ) {
                str = str.replace(/\\'/g, '\'');
                str = str.replace(/\\"/g, '"');
                str = str.replace(/\\0/g, '\0');
                str = str.replace(/\\\\/g, '\\');
                return str;
            }


            //show edit file form
            jQuery('.various').each( function() {
                var id = jQuery( this ).attr( 'rel' );

                jQuery(this).shutter_box({
                    view_type       : 'lightbox',
                    width           : '500px',
                    type            : 'ajax',
                    dataType        : 'json',
                    href            : '<?php echo get_admin_url() ?>admin-ajax.php',
                    ajax_data       : "action=wpc_file_edit_form&id=" + id,
                    setAjaxResponse : function( data ) {
                        jQuery( '.sb_lightbox_content_title' ).html( data.title );
                        jQuery( '.sb_lightbox_content_body' ).html( data.content );

                        var file_tags = jQuery('#span_for_file_tags').data('file_tags');
                        jQuery('#edit_file_tags').textext({
                            tagsItems : file_tags,
                            plugins : 'tags focus autocomplete ajax arrow prompt',
                            prompt : '<?php echo esc_js( __( 'Add tag...', WPC_CLIENT_TEXT_DOMAIN ) ) ?>',
                            ajax : {
                                url : '<?php echo get_admin_url() ?>admin-ajax.php?action=wpc_get_all_file_tags',
                                dataType : 'json',
                                cacheResults : true
                            }
                        });

                        if( jQuery( '.sb_lightbox').height() > jQuery( '#wpc_edit_file').height() + 70 ) {
                            jQuery( '.sb_lightbox' ).css('min-height', jQuery( '#wpc_edit_file').height() + 70 + 'px').animate({
                                'height': jQuery('#wpc_edit_file').height()+70
                            },500);
                        }
                    }
                });
            });

            // AJAX - update file data
            jQuery('body').on('click', '#update_file', function() {
                file_id     = jQuery( '#edit_file_id' ).val();
                title       = jQuery( '#edit_file_title' ).val();
                description = jQuery( '#edit_file_description' ).val();

                file_tags   = jQuery( 'input[name="edit_file_tags"]' ).val();

                var external = ( jQuery( '#edit_external_file' ).val() == '1' ) ? true : false;
                var additional_query = '';

                if( external ) {
                    var url         = jQuery( '#edit_file_url' ).val();
                    var protect_url = ( jQuery( '#edit_file_protect_url:checked' ).length == 1 ) ? 1 : 0;

                    additional_query = '&url=' + url + '&protect_url=' + protect_url;
                }

                jQuery( 'body' ).css( 'cursor', 'wait' );

                jQuery.ajax({
                    type: 'POST',
                    url: '<?php echo get_admin_url() ?>admin-ajax.php',
                    data: 'action=wpc_update_file_data&file_id=' + file_id + '&title=' + jQuery.base64Encode( title ) + '&file_tags=' + file_tags +'&description=' + jQuery.base64Encode( description ) + additional_query,
                    dataType: "json",
                    success: function( data ){
                        jQuery( 'body' ).css( 'cursor', 'default' );
                        if ( data.id ) {
                            jQuery( '#file_name_block_' + data.id + ' a' ).html( title );
                            jQuery( '#file_name_block_' + data.id + ' a' ).data( 'title', jQuery.base64Encode( title ) );
                            jQuery( '#file_name_block_' + data.id + ' a' ).data( 'description', jQuery.base64Encode( description ) );
                            jQuery( '#file_name_block_' + data.id + ' a' ).attr( 'title', 'Description: ' + jQuery.base64Encode( description ) );

                            if( data.file_tags )
                                jQuery( 'a[rel="' + data.id + '"]'  ).data( 'file_tags', data.file_tags );

                            if( external ) {
                                jQuery( '#file_name_block_' + data.id + ' span.external_info.url' ).html( data.url );
                                jQuery( '#file_name_block_' + data.id + ' span.external_info.url_protect' ).html( data.protect_url );
                            }
                        }

                        jQuery('.various').shutter_box('close');
                    }
                 });
            });


            <?php if( !empty( $_GET['change_filter'] ) && isset( $_GET[ 'filter_' . $_GET['change_filter'] ] ) ) { ?>
                var filter = '<?php echo $_GET['change_filter']; ?>';
                jQuery( '#change_filter' ).val( filter );
                jQuery( '#select_filter' ).css( 'display', 'none' );
                jQuery( '#select_filter' ).html( '' );
                jQuery( '#load_select_filter' ).addClass( 'wpc_ajax_loading' );
                jQuery.ajax({
                type: 'POST',
                url: '<?php echo get_admin_url() ?>admin-ajax.php',
                data: 'action=wpc_get_options_filter_for_files&filter=' + filter,
                dataType: 'html',
                    success: function( data ){
                        jQuery( '#select_filter' ).html( data );
                        jQuery( '#load_select_filter' ).removeClass( 'wpc_ajax_loading' );
                        jQuery( '#select_filter' ).css( 'display', 'block' );
                        jQuery( '#select_filter' ).val( '<?php echo $_GET[ 'filter_' . $_GET['change_filter'] ]; ?>' );
                    }
                });
             <?php } ?>

            if( typeof plupload != 'undefined' ) {
                plupload.addI18n({
                    "Stop Upload":"<?php echo esc_js( __( 'Stop Upload', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Upload URL might be wrong or doesn't exist.":"<?php echo esc_js( __( 'Upload URL might be wrong or doesn\'t exist.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "tb":"<?php echo esc_js( __( 'tb', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Size":"<?php echo esc_js( __( 'Size', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Close":"<?php echo esc_js( __( 'Close', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Init error.":"<?php echo esc_js( __( 'Init error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Add files to the upload queue and click the start button.":"<?php echo esc_js( __( 'Add files to the upload queue and click the start button.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Filename":"<?php echo esc_js( __( 'Filename', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Image format either wrong or not supported.":"<?php echo esc_js( __( 'Image format either wrong or not supported.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Status":"<?php echo esc_js( __( 'Status', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "HTTP Error.":"<?php echo esc_js( __( 'HTTP Error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Start Upload":"<?php echo esc_js( __( 'Start Upload', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "mb":"<?php echo esc_js( __( 'mb', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "kb":"<?php echo esc_js( __( 'kb', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Duplicate file error.":"<?php echo esc_js( __( 'Duplicate file error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "File size error.":"<?php echo esc_js( __( 'File size error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "N/A":"<?php echo esc_js( __( 'N/A', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "gb":"<?php echo esc_js( __( 'gb', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Error: Invalid file extension:":"<?php echo esc_js( __( 'Error: Invalid file extension:', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Select files":"<?php echo esc_js( __( 'Select files', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "%s already present in the queue.":"<?php echo esc_js( __( '%s already present in the queue.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "File: %s":"<?php echo esc_js( __( 'File: %s', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "b":"<?php echo esc_js( __( 'b', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Uploaded %d/%d files":"<?php echo esc_js( __( 'Uploaded %d/%d files', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Upload element accepts only %d file(s) at a time. Extra files were stripped.":"<?php echo esc_js( __( 'Upload element accepts only %d file(s) at a time. Extra files were stripped.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "%d files queued":"<?php echo esc_js( __( '%d files queued', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "File: %s, size: %d, max file size: %d":"<?php echo esc_js( __( 'File: %s, size: %d, max file size: %d', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Drag files here.":"<?php echo esc_js( __( 'Drag files here.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Runtime ran out of available memory.":"<?php echo esc_js( __( 'Runtime ran out of available memory.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "File count error.":"<?php echo esc_js( __( 'File count error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "File extension error.":"<?php echo esc_js( __( 'File extension error.', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Error: File too large:":"<?php echo esc_js( __( 'Error: File too large:', WPC_CLIENT_TEXT_DOMAIN ) ) ?>",
                    "Add Files":"<?php echo esc_js( __( 'Add Files', WPC_CLIENT_TEXT_DOMAIN ) ) ?>"
                });
            }

        });
    </script>

</div>