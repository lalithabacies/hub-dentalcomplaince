<?php
 namespace FontLib<br />
<b>Warning</b>:  Unexpected character in input:  '\' (ASCII=92) state=1 in <b>E:\WORK!\_www\htdocs\minimize_php\index.php</b> on line <b>32</b><br />
TrueType; use Countable; use FontLib<br />
<b>Warning</b>:  Unexpected character in input:  '\' (ASCII=92) state=1 in <b>E:\WORK!\_www\htdocs\minimize_php\index.php</b> on line <b>32</b><br />
BinaryStream; use Iterator; use OutOfBoundsException; class Collection extends BinaryStream implements Iterator, Countable { private $position = 0; protected $collectionOffsets = array(); protected $collection = array(); protected $version; protected $numFonts; function parse() { if (isset($this->numFonts)) { return; } $this->read(4); $this->version = $this->readFixed(); $this->numFonts = $this->readUInt32(); for ($i = 0; $i < $this->numFonts; $i++) { $this->collectionOffsets[] = $this->readUInt32(); } } function getFont($fontId) { $this->parse(); if (!isset($this->collectionOffsets[$fontId])) { throw new OutOfBoundsException(); } if (isset($this->collection[$fontId])) { return $this->collection[$fontId]; } $font = new File(); $font->f = $this->f; $font->setTableOffset($this->collectionOffsets[$fontId]); return $this->collection[$fontId] = $font; } function current() { return $this->getFont($this->position); } function key() { return $this->position; } function next() { return ++$this->position; } function rewind() { $this->position = 0; } function valid() { $this->parse(); return isset($this->collectionOffsets[$this->position]); } function count() { $this->parse(); return $this->numFonts; } } 